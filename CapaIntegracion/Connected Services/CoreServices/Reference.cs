//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CapaIntegracion.CoreServices {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://WebServicesCore.org/", ConfigurationName="CoreServices.WebServicesCoreSoap")]
    public interface WebServicesCoreSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WebServicesCore.org/Consulta_de_balance", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CapaIntegracion.CoreServices.Response Consulta_de_balance(string Nombre_completo_solicitante, string Cedula, string Cuenta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WebServicesCore.org/Consulta_de_balance", ReplyAction="*")]
        System.Threading.Tasks.Task<CapaIntegracion.CoreServices.Response> Consulta_de_balanceAsync(string Nombre_completo_solicitante, string Cedula, string Cuenta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WebServicesCore.org/Depositar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CapaIntegracion.CoreServices.Response Depositar(string Nombre_completo_solicitante, string Cedula, string Cuenta, string Monto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WebServicesCore.org/Depositar", ReplyAction="*")]
        System.Threading.Tasks.Task<CapaIntegracion.CoreServices.Response> DepositarAsync(string Nombre_completo_solicitante, string Cedula, string Cuenta, string Monto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WebServicesCore.org/Mostrar_cuentas", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CapaIntegracion.CoreServices.Response Mostrar_cuentas(string Nombre_completo_solicitante, string Cedula, string Cuenta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WebServicesCore.org/Mostrar_cuentas", ReplyAction="*")]
        System.Threading.Tasks.Task<CapaIntegracion.CoreServices.Response> Mostrar_cuentasAsync(string Nombre_completo_solicitante, string Cedula, string Cuenta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WebServicesCore.org/Mostrar_cuentas_del_cliente", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CapaIntegracion.CoreServices.Response Mostrar_cuentas_del_cliente(string Nombre_completo_solicitante, string Cedula, int ID_Cliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WebServicesCore.org/Mostrar_cuentas_del_cliente", ReplyAction="*")]
        System.Threading.Tasks.Task<CapaIntegracion.CoreServices.Response> Mostrar_cuentas_del_clienteAsync(string Nombre_completo_solicitante, string Cedula, int ID_Cliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WebServicesCore.org/Movimiento_cuentas", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CapaIntegracion.CoreServices.Response Movimiento_cuentas(string Nombre_completo_Solicitante, string Cedula, string Cuenta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WebServicesCore.org/Movimiento_cuentas", ReplyAction="*")]
        System.Threading.Tasks.Task<CapaIntegracion.CoreServices.Response> Movimiento_cuentasAsync(string Nombre_completo_Solicitante, string Cedula, string Cuenta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WebServicesCore.org/Retirar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CapaIntegracion.CoreServices.Response Retirar(string Nombre_completo_solicitante, string Cedula, string Cuenta, string Monto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WebServicesCore.org/Retirar", ReplyAction="*")]
        System.Threading.Tasks.Task<CapaIntegracion.CoreServices.Response> RetirarAsync(string Nombre_completo_solicitante, string Cedula, string Cuenta, string Monto);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://WebServicesCore.org/")]
    public partial class Response : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nombre_completo_solicitanteField;
        
        private string cedulaField;
        
        private string mensajeField;
        
        private decimal montoField;
        
        private System.Data.DataSet dataSetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Nombre_completo_solicitante {
            get {
                return this.nombre_completo_solicitanteField;
            }
            set {
                this.nombre_completo_solicitanteField = value;
                this.RaisePropertyChanged("Nombre_completo_solicitante");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Cedula {
            get {
                return this.cedulaField;
            }
            set {
                this.cedulaField = value;
                this.RaisePropertyChanged("Cedula");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Mensaje {
            get {
                return this.mensajeField;
            }
            set {
                this.mensajeField = value;
                this.RaisePropertyChanged("Mensaje");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public decimal Monto {
            get {
                return this.montoField;
            }
            set {
                this.montoField = value;
                this.RaisePropertyChanged("Monto");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public System.Data.DataSet DataSet {
            get {
                return this.dataSetField;
            }
            set {
                this.dataSetField = value;
                this.RaisePropertyChanged("DataSet");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebServicesCoreSoapChannel : CapaIntegracion.CoreServices.WebServicesCoreSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebServicesCoreSoapClient : System.ServiceModel.ClientBase<CapaIntegracion.CoreServices.WebServicesCoreSoap>, CapaIntegracion.CoreServices.WebServicesCoreSoap {
        
        public WebServicesCoreSoapClient() {
        }
        
        public WebServicesCoreSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebServicesCoreSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServicesCoreSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServicesCoreSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CapaIntegracion.CoreServices.Response Consulta_de_balance(string Nombre_completo_solicitante, string Cedula, string Cuenta) {
            return base.Channel.Consulta_de_balance(Nombre_completo_solicitante, Cedula, Cuenta);
        }
        
        public System.Threading.Tasks.Task<CapaIntegracion.CoreServices.Response> Consulta_de_balanceAsync(string Nombre_completo_solicitante, string Cedula, string Cuenta) {
            return base.Channel.Consulta_de_balanceAsync(Nombre_completo_solicitante, Cedula, Cuenta);
        }
        
        public CapaIntegracion.CoreServices.Response Depositar(string Nombre_completo_solicitante, string Cedula, string Cuenta, string Monto) {
            return base.Channel.Depositar(Nombre_completo_solicitante, Cedula, Cuenta, Monto);
        }
        
        public System.Threading.Tasks.Task<CapaIntegracion.CoreServices.Response> DepositarAsync(string Nombre_completo_solicitante, string Cedula, string Cuenta, string Monto) {
            return base.Channel.DepositarAsync(Nombre_completo_solicitante, Cedula, Cuenta, Monto);
        }
        
        public CapaIntegracion.CoreServices.Response Mostrar_cuentas(string Nombre_completo_solicitante, string Cedula, string Cuenta) {
            return base.Channel.Mostrar_cuentas(Nombre_completo_solicitante, Cedula, Cuenta);
        }
        
        public System.Threading.Tasks.Task<CapaIntegracion.CoreServices.Response> Mostrar_cuentasAsync(string Nombre_completo_solicitante, string Cedula, string Cuenta) {
            return base.Channel.Mostrar_cuentasAsync(Nombre_completo_solicitante, Cedula, Cuenta);
        }
        
        public CapaIntegracion.CoreServices.Response Mostrar_cuentas_del_cliente(string Nombre_completo_solicitante, string Cedula, int ID_Cliente) {
            return base.Channel.Mostrar_cuentas_del_cliente(Nombre_completo_solicitante, Cedula, ID_Cliente);
        }
        
        public System.Threading.Tasks.Task<CapaIntegracion.CoreServices.Response> Mostrar_cuentas_del_clienteAsync(string Nombre_completo_solicitante, string Cedula, int ID_Cliente) {
            return base.Channel.Mostrar_cuentas_del_clienteAsync(Nombre_completo_solicitante, Cedula, ID_Cliente);
        }
        
        public CapaIntegracion.CoreServices.Response Movimiento_cuentas(string Nombre_completo_Solicitante, string Cedula, string Cuenta) {
            return base.Channel.Movimiento_cuentas(Nombre_completo_Solicitante, Cedula, Cuenta);
        }
        
        public System.Threading.Tasks.Task<CapaIntegracion.CoreServices.Response> Movimiento_cuentasAsync(string Nombre_completo_Solicitante, string Cedula, string Cuenta) {
            return base.Channel.Movimiento_cuentasAsync(Nombre_completo_Solicitante, Cedula, Cuenta);
        }
        
        public CapaIntegracion.CoreServices.Response Retirar(string Nombre_completo_solicitante, string Cedula, string Cuenta, string Monto) {
            return base.Channel.Retirar(Nombre_completo_solicitante, Cedula, Cuenta, Monto);
        }
        
        public System.Threading.Tasks.Task<CapaIntegracion.CoreServices.Response> RetirarAsync(string Nombre_completo_solicitante, string Cedula, string Cuenta, string Monto) {
            return base.Channel.RetirarAsync(Nombre_completo_solicitante, Cedula, Cuenta, Monto);
        }
    }
}
